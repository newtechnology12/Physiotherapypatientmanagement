# Generated by Django 4.2 on 2023-04-26 10:34

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Cell',
            fields=[
                ('Cell_List', models.CharField(max_length=10, primary_key=True, serialize=False, unique=True)),
                ('Cell_List_Description', models.CharField(max_length=80)),
                ('Sector_List_Description', models.CharField(max_length=80)),
            ],
            options={
                'db_table': 'Cell',
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country', models.CharField(max_length=2)),
                ('Country_Description', models.CharField(max_length=80)),
            ],
            options={
                'db_table': 'Country',
            },
        ),
        migrations.CreateModel(
            name='District',
            fields=[
                ('District_List', models.CharField(max_length=10, primary_key=True, serialize=False, unique=True)),
                ('District_List_Description', models.CharField(max_length=80)),
                ('Province_List_Description', models.CharField(max_length=80)),
            ],
            options={
                'db_table': 'District',
            },
        ),
        migrations.CreateModel(
            name='Economic_Sub_Sector_Code_ISIC',
            fields=[
                ('ECONOMIC_SUB_SECTOR_CODE_ISIC', models.CharField(blank=True, max_length=5, primary_key=True, serialize=False)),
                ('ECONOMIC_SUB_SECTOR_CODE_ISIC_DESC', models.CharField(blank=True, max_length=255)),
            ],
            options={
                'db_table': 'Economic_Sub_Sector_Code_ISIC',
            },
        ),
        migrations.CreateModel(
            name='Education',
            fields=[
                ('Education_Description', models.CharField(blank=True, max_length=255, primary_key=True, serialize=False)),
                ('interface', models.CharField(blank=True, max_length=15)),
            ],
            options={
                'db_table': 'Education',
            },
        ),
        migrations.CreateModel(
            name='Legal_Status',
            fields=[
                ('Legal_Status', models.CharField(blank=True, max_length=1, primary_key=True, serialize=False)),
                ('Legal_Status_Description', models.CharField(blank=True, max_length=80)),
            ],
            options={
                'db_table': 'Legal_Status',
            },
        ),
        migrations.CreateModel(
            name='Marital_Status',
            fields=[
                ('Marital_Status', models.CharField(blank=True, max_length=5, primary_key=True, serialize=False)),
                ('Marital_Status_Description', models.CharField(blank=True, max_length=20)),
                ('interface', models.CharField(blank=True, max_length=15)),
            ],
            options={
                'db_table': 'Marital_Status',
            },
        ),
        migrations.CreateModel(
            name='National_ID_Type',
            fields=[
                ('ID_Type', models.CharField(blank=True, max_length=80, primary_key=True, serialize=False)),
                ('interface', models.CharField(blank=True, max_length=25)),
            ],
            options={
                'db_table': 'National_ID_Type',
            },
        ),
        migrations.CreateModel(
            name='Patient_Gender',
            fields=[
                ('Gender', models.CharField(blank=True, max_length=15, primary_key=True, serialize=False)),
                ('GenderDescription', models.CharField(blank=True, max_length=15)),
                ('interface', models.CharField(blank=True, max_length=15)),
            ],
            options={
                'db_table': 'Customer_Gender',
            },
        ),
        migrations.CreateModel(
            name='Patient_Status',
            fields=[
                ('General_Status', models.CharField(blank=True, max_length=1, primary_key=True, serialize=False)),
                ('General_Status_Description', models.CharField(blank=True, max_length=10)),
            ],
            options={
                'db_table': 'Customer_Status',
            },
        ),
        migrations.CreateModel(
            name='PatientRegistration',
            fields=[
                ('patient_ID', models.CharField(blank=True, default='CUST607', max_length=70, primary_key=True, serialize=False)),
                ('National_ID_Number', models.CharField(blank=True, max_length=16, null=True, unique=True)),
                ('patient_Name', models.CharField(blank=True, max_length=80, null=True)),
                ('FirstName', models.CharField(blank=True, max_length=80, null=True)),
                ('LastName', models.CharField(blank=True, max_length=80, null=True)),
                ('patient_registed_Date', models.DateTimeField(default=django.utils.timezone.now)),
                ('Date_of_Birth', models.DateField(default=django.utils.timezone.now)),
                ('Email_ID', models.EmailField(blank=True, max_length=100, null=True)),
                ('Telephone', models.CharField(blank=True, max_length=20, null=True)),
                ('Economic_Sub_Sector', models.ForeignKey(blank=True, max_length=10, null=True, on_delete=django.db.models.deletion.CASCADE, to='patient.economic_sub_sector_code_isic')),
                ('Education', models.ForeignKey(blank=True, max_length=4, null=True, on_delete=django.db.models.deletion.CASCADE, to='patient.education')),
                ('Legal_Status', models.ForeignKey(blank=True, max_length=4, null=True, on_delete=django.db.models.deletion.CASCADE, to='patient.legal_status')),
                ('Marital_Status', models.ForeignKey(blank=True, max_length=10, null=True, on_delete=django.db.models.deletion.PROTECT, to='patient.marital_status')),
                ('National_ID_Typ', models.ForeignKey(blank=True, max_length=4, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='National_ID_Typ', to='patient.national_id_type')),
                ('Nationality', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='nationality', to='patient.country')),
                ('Place_of_Birth', models.ForeignKey(blank=True, max_length=80, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='Place_of_Birth', to='patient.country')),
                ('Residence', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='patient.country')),
                ('cell', models.ForeignKey(blank=True, max_length=10, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='cell', to='patient.cell')),
                ('district', models.ForeignKey(blank=True, max_length=10, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='district', to='patient.district')),
                ('patient_Gender', models.ForeignKey(blank=True, max_length=10, null=True, on_delete=django.db.models.deletion.PROTECT, to='patient.patient_gender')),
                ('patient_Status', models.ForeignKey(blank=True, max_length=4, null=True, on_delete=django.db.models.deletion.CASCADE, to='patient.patient_status')),
            ],
            options={
                'db_table': 'PatientRegistration',
            },
        ),
        migrations.CreateModel(
            name='Province',
            fields=[
                ('Province_List', models.CharField(max_length=10, primary_key=True, serialize=False, unique=True)),
                ('Province_List_Description', models.CharField(max_length=80, null=True)),
            ],
            options={
                'db_table': 'Province',
            },
        ),
        migrations.CreateModel(
            name='Village',
            fields=[
                ('Village_List', models.CharField(max_length=20, primary_key=True, serialize=False, unique=True)),
                ('Vilage_List_Description', models.CharField(max_length=80)),
                ('Cell_List_Description', models.CharField(max_length=40)),
                ('Cell_List', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='patient.cell')),
            ],
            options={
                'db_table': 'Village',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_type', models.CharField(choices=[('D', 'Terapist'), ('A', 'Assistence'), ('P', 'Patient'), ('R', 'Receptionist'), ('ADM', 'Admin')], max_length=3)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='auth_users', to='auth.group')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='auth_users', to='auth.permission')),
            ],
            options={
                'ordering': ('id',),
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Sector',
            fields=[
                ('Sector_List', models.CharField(max_length=10, primary_key=True, serialize=False, unique=True)),
                ('Sector_List_Description', models.CharField(max_length=80)),
                ('District_List_Description', models.CharField(max_length=80)),
                ('District_List', models.ForeignKey(max_length=10, on_delete=django.db.models.deletion.PROTECT, to='patient.district')),
            ],
            options={
                'db_table': 'Sector',
            },
        ),
        migrations.CreateModel(
            name='Prescription_Therapist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(auto_now_add=True)),
                ('symptoms', models.CharField(max_length=200)),
                ('prescription', models.TextField()),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='patient_prescription', to='patient.user')),
                ('therapist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='therapist_prescription', to='patient.user')),
            ],
            options={
                'ordering': ('-id',),
            },
        ),
        migrations.CreateModel(
            name='Prescription_PhysioTherapy_ASSISTANT',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(auto_now_add=True)),
                ('symptoms', models.CharField(max_length=200)),
                ('prescription', models.TextField()),
                ('assistant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assistance_prescription', to='patient.user')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='patient_prescription', to='patient.patientregistration')),
            ],
            options={
                'ordering': ('-id',),
            },
        ),
        migrations.AddField(
            model_name='patientregistration',
            name='province',
            field=models.ForeignKey(blank=True, max_length=10, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='province', to='patient.province'),
        ),
        migrations.AddField(
            model_name='patientregistration',
            name='sector',
            field=models.ForeignKey(blank=True, max_length=10, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='sector', to='patient.sector'),
        ),
        migrations.AddField(
            model_name='patientregistration',
            name='village',
            field=models.ForeignKey(blank=True, max_length=10, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='Comm_Village', to='patient.village'),
        ),
        migrations.CreateModel(
            name='PatientBill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('treatment_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('amount', models.FloatField()),
                ('payment_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='patientbillbycustomer', to='patient.patientregistration')),
            ],
        ),
        migrations.AddField(
            model_name='district',
            name='Province_List',
            field=models.ForeignKey(max_length=10, on_delete=django.db.models.deletion.PROTECT, to='patient.province'),
        ),
        migrations.AddField(
            model_name='cell',
            name='Sector_List',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='patient.sector'),
        ),
        migrations.CreateModel(
            name='Appointment_Receptionist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_id_number', models.CharField(max_length=200)),
                ('date', models.DateField()),
                ('time', models.DateTimeField(default=django.utils.timezone.now)),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('Completed', 'Completed')], max_length=10)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='patient', to='patient.patientregistration')),
                ('therapist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='therapist', to='patient.user')),
            ],
        ),
    ]
